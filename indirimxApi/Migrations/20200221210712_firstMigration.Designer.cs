// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using indirimxApi;

namespace indirimxApi.Migrations
{
    [DbContext(typeof(indirimxContext))]
    [Migration("20200221210712_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("indirimxApi.Models.Comments", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<DateTime>("create_date");

                    b.Property<bool>("deleted");

                    b.Property<int>("product_id");

                    b.Property<int>("user_id");

                    b.HasKey("id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("indirimxApi.Models.Favorites", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("create_date");

                    b.Property<bool>("deleted");

                    b.Property<int?>("productid");

                    b.HasKey("id");

                    b.HasIndex("productid");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("indirimxApi.Models.Images", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("create_date");

                    b.Property<bool>("deleted");

                    b.Property<string>("image");

                    b.Property<bool>("is_active");

                    b.Property<int>("order");

                    b.HasKey("id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("indirimxApi.Models.Likes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("create_date");

                    b.Property<bool>("deleted");

                    b.Property<string>("like");

                    b.Property<int>("product_id");

                    b.Property<int>("user_id");

                    b.HasKey("id");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("indirimxApi.Models.Products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("commentid");

                    b.Property<int>("comments_count");

                    b.Property<DateTime>("create_date");

                    b.Property<bool>("deleted");

                    b.Property<string>("description");

                    b.Property<int?>("imageid");

                    b.Property<bool>("is_active");

                    b.Property<int?>("likeid");

                    b.Property<int>("likes_count");

                    b.Property<string>("location");

                    b.Property<string>("name");

                    b.Property<int>("order");

                    b.Property<double>("price");

                    b.Property<string>("store");

                    b.Property<int?>("userid");

                    b.HasKey("id");

                    b.HasIndex("commentid");

                    b.HasIndex("imageid");

                    b.HasIndex("likeid");

                    b.HasIndex("userid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("indirimxApi.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("create_date");

                    b.Property<bool>("deleted");

                    b.Property<string>("email");

                    b.Property<string>("image");

                    b.Property<string>("name");

                    b.Property<string>("password");

                    b.Property<string>("role");

                    b.Property<string>("sure_name");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("indirimxApi.Models.Favorites", b =>
                {
                    b.HasOne("indirimxApi.Models.Products", "product")
                        .WithMany()
                        .HasForeignKey("productid");
                });

            modelBuilder.Entity("indirimxApi.Models.Products", b =>
                {
                    b.HasOne("indirimxApi.Models.Comments", "comment")
                        .WithMany()
                        .HasForeignKey("commentid");

                    b.HasOne("indirimxApi.Models.Images", "image")
                        .WithMany()
                        .HasForeignKey("imageid");

                    b.HasOne("indirimxApi.Models.Likes", "like")
                        .WithMany()
                        .HasForeignKey("likeid");

                    b.HasOne("indirimxApi.Models.Users", "user")
                        .WithMany()
                        .HasForeignKey("userid");
                });
#pragma warning restore 612, 618
        }
    }
}
